name: Copilot Autofix

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main]
  schedule:
    # Run daily at 2 AM UTC to catch new security vulnerabilities
    - cron: '0 2 * * *'

permissions:
  contents: write
  pull-requests: write
  security-events: write
  actions: read

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        id: audit
        run: |
          pnpm audit --audit-level moderate --json > audit.json || true
          echo "audit_result=$(cat audit.json)" >> $GITHUB_OUTPUT

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  pr-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Analyze PR changes
        run: |
          git diff origin/${{ github.base_ref }}...HEAD --name-only > changed_files.txt
          echo "Changed files:"
          cat changed_files.txt

      - name: Run focused linting on changed files
        run: |
          if [ -s changed_files.txt ]; then
            # Filter for TypeScript/JavaScript files
            grep -E '\.(ts|tsx|js|jsx)$' changed_files.txt > js_files.txt || true
            if [ -s js_files.txt ]; then
              pnpm eslint $(cat js_files.txt | tr '\n' ' ') || true
            fi
          fi

      - name: Comment PR with analysis results
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read changed files
            let changedFiles = [];
            try {
              changedFiles = fs.readFileSync('changed_files.txt', 'utf8').split('\n').filter(f => f.trim());
            } catch (e) {
              console.log('No changed files found');
            }
            
            const comment = `## 🤖 Automatic Code Review
            
            **Files Analyzed:** ${changedFiles.length}
            
            ### 📋 Analysis Summary
            - Security scan: ✅ Completed
            - Linting: ✅ Completed  
            - Type checking: ✅ Will run in CI
            
            ### 📁 Changed Files
            ${changedFiles.map(f => `- \`${f}\``).join('\n')}
            
            ### 🔒 Security Recommendations
            - Ensure no hardcoded secrets in new files
            - Validate all user inputs
            - Use TypeScript strict mode for type safety
            
            ### 💡 Code Quality Tips
            - Follow conventional commit format
            - Add unit tests for new functions
            - Update documentation for API changes
            
            ---
            *This is an automated review. Please address any issues before requesting human review.*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  auto-approve-dependabot:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Auto-approve minor and patch updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor'
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}