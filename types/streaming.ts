// Core streaming and video-related types
export interface Stream {
  id: string
  userId: string
  title: string
  description?: string
  category?: string
  tags: string[]
  streamKey: string
  rtmpUrl: string
  hlsUrl: string
  status: 'inactive' | 'active' | 'ended' | 'error'
  isLive: boolean
  viewerCount: number
  maxViewers: number
  startedAt?: Date
  endedAt?: Date
  createdAt: Date
  updatedAt: Date
  settings: StreamSettings
  metadata: StreamMetadata
}

export interface StreamSettings {
  quality: VideoQuality[]
  enableChat: boolean
  enableRecording: boolean
  isPrivate: boolean
  requireSubscription: boolean
  requiredTier?: SubscriptionTier
  moderationLevel: 'low' | 'medium' | 'high'
  allowedCountries?: string[]
  maxDuration?: number // in minutes
}

export interface StreamMetadata {
  thumbnailUrl?: string
  previewUrl?: string
  language?: string
  ageRating?: 'all' | '13+' | '18+'
  contentWarnings?: string[]
  scheduledStartTime?: Date
  estimatedDuration?: number
}

export interface VOD {
  id: string
  streamId?: string // If created from a live stream
  userId: string
  title: string
  description?: string
  category?: string
  tags: string[]
  duration: number // in seconds
  fileSize: number // in bytes
  status: 'processing' | 'ready' | 'error' | 'deleted'
  visibility: 'public' | 'unlisted' | 'private'
  requiredTier: SubscriptionTier
  gcsPath: string
  thumbnailUrl?: string
  previewUrl?: string
  viewCount: number
  likeCount: number
  createdAt: Date
  updatedAt: Date
  publishedAt?: Date
  metadata: VODMetadata
  analytics: VODAnalytics
}

export interface VODMetadata {
  originalFileName?: string
  uploadedFileName: string
  mimeType: string
  resolution: VideoResolution
  bitrate: number
  frameRate: number
  audioCodec?: string
  videoCodec?: string
  language?: string
  subtitles?: SubtitleTrack[]
  chapters?: Chapter[]
  aiGenerated?: AIGeneratedContent
}

export interface VODAnalytics {
  totalViews: number
  uniqueViews: number
  averageWatchTime: number
  completionRate: number
  engagementScore: number
  geographicDistribution: Record<string, number>
  deviceDistribution: Record<string, number>
  trafficSources: Record<string, number>
  retentionCurve: RetentionPoint[]
}

export interface SubtitleTrack {
  id: string
  language: string
  label: string
  url: string
  isDefault: boolean
  isAutoGenerated: boolean
}

export interface Chapter {
  id: string
  title: string
  startTime: number
  endTime: number
  thumbnailUrl?: string
}

export interface AIGeneratedContent {
  thumbnails: string[]
  title?: string
  description?: string
  tags: string[]
  transcription?: string
  scenes: Scene[]
  highlights: Highlight[]
  contentScore: number
  processedAt: Date
}

export interface Scene {
  id: string
  startTime: number
  endTime: number
  description: string
  confidence: number
  keyFrameUrl?: string
}

export interface Highlight {
  id: string
  startTime: number
  endTime: number
  title: string
  description?: string
  confidence: number
  thumbnailUrl?: string
  clipUrl?: string
}

export interface RetentionPoint {
  timestamp: number
  retentionRate: number
}

export type VideoQuality = '480p' | '720p' | '1080p' | '4K'
export type VideoResolution = '854x480' | '1280x720' | '1920x1080' | '3840x2160'
export type SubscriptionTier = 'basic' | 'premium' | 'pro'

// Streaming configuration types
export interface StreamConfig {
  id: string
  userId: string
  streamKey: string
  rtmpUrl: string
  hlsUrl: string
  status: Stream['status']
  createdAt: Date
}

export interface TranscodingJob {
  id: string
  streamId?: string
  vodId?: string
  inputPath: string
  outputPath: string
  status: 'pending' | 'processing' | 'completed' | 'failed'
  progress: number
  qualities: VideoQuality[]
  startedAt?: Date
  completedAt?: Date
  errorMessage?: string
}